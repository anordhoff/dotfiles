# --------------------------------------
# settings
# --------------------------------------
set -sg escape-time 1           # minimal delay for escape key press
set -sg set-clipboard on        # allow vim to access the clipboard
set  -g default-command $SHELL  # new windows start a non-login shell
set  -g bell-action none        # disable bell sound
set  -g focus-events on         # focus events enabled for supported terminals
set  -g allow-rename off        # prevent programs from changing window title
set  -g automatic-rename on     # automatically set window title
set  -g renumber-windows on     # automatically renumber remaining windows
set  -g base-index 1            # start windows at 1
set  -g pane-base-index 1       # start panes at 1
set  -g main-pane-height 66%    # set main-horizontal layout main pane size
set  -g main-pane-width 66%     # set main-vertical layout main pane size
set  -g mode-keys vi            # vi for copy mode
set  -g status-keys emacs       # emacs for status line commands
set  -g history-limit 10000     # increase scrollback buffer size
set  -g display-time 4000       # set display time for tmux messages
set  -g status-left-length 40   # max length of the left statusline
set  -g status-right-length 120 # max length of the right statusline
set  -g status-interval 5       # refresh statusline every five seconds
set  -g monitor-activity on     # highlight windows with activity in statusline

# enable truecolor and additional features provided by tmux-256color
set  -g default-terminal "tmux-256color"
set -sa terminal-features ",xterm-*:RGB"

# paste from clipboard
if-shell '[[ $OSTYPE =~ "linux-gnu"* ]]' {
  if-shell '[[ -z $WAYLAND_DISPLAY ]]' \
    'bind ] run "xclip -o -selection clipboard | tmux load-buffer -; tmux paste-buffer"' \
    'bind ] run "wl-paste --no-newline | tmux load-buffer -; tmux paste-buffer"'
}
if-shell '[[ $OSTYPE =~ "darwin"* ]]' \
  'bind ] run "pbpaste | tmux load-buffer -; tmux paste-buffer"'

# refresh the statusline after changing sessions
bind ( switch-client -p\; refresh-client -S
bind ) switch-client -n\; refresh-client -S

# if pane is zoomed, stay zoomed when selecting a new pane
bind o select-pane -Z -t :.+
bind \; select-pane -Z -l

# open windows in current working directory
bind c new-window -c "#{pane_current_path}"

# open splits in current working directory
bind % split-window -h -c "#{pane_current_path}"
bind \" split-window -v -c "#{pane_current_path}"

# refresh the statusline after choose-tree
bind w choose-tree -Zs -O name\; refresh-client -S

# warn before detaching session
bind d confirm-before -p "detach-session #S? (y/n)" detach-client


# --------------------------------------
# keybindings
# --------------------------------------

# rebind prefix
set -g prefix M-a
unbind C-b
bind M-a send-prefix

# change session by name and refresh the statusline
bind t command-prompt -I "switch -t "\; refresh-client -S

# rebind split-window
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind S split-window -v -f -c "#{pane_current_path}"
bind V split-window -h -f -c "#{pane_current_path}"

# previous pane (without losing zoom)
bind a select-pane -Z -t :.-

# resize pane
bind r command-prompt -I "resize-pane "

# resize pane
bind u select-layout -o

# join current pane to given window
bind @ command-prompt -I "join-pane -t :"

# move window left or right in status bar
bind < { swap-window -t -1; previous-window }
bind > { swap-window -t +1; next-window }

# copy-mode vi key bindings
bind e copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi r send -X rectangle-toggle
if-shell '[[ $OSTYPE == "linux-gnu"* ]]' {
  if-shell '[[ -z $WAYLAND_DISPLAY ]]' \
    'bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -f -selection clipboard"' \
    'bind -T copy-mode-vi y send-keys -X copy-pipe "wl-copy"'
}
if-shell '[[ $OSTYPE == "darwin"* ]]' \
  'bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"'

# quicker key bindings
bind M-w choose-tree -Zs -O name\; refresh-client -S
bind M-p previous-window
bind M-n next-window
bind M-a select-pane -Z -t :.-
bind M-o select-pane -Z -t :.+


# --------------------------------------
# style
# --------------------------------------

set -g status-position bottom
set -g status-justify left
set -g status-left-length 120
set -g status-right-length 120

set -g status-left " (#(tmux ls | grep attached | awk '{print $1}' | tr -d ':'))  "
set -g status-right "    #(kubectl config current-context)  (#(kubectl config view --minify -o jsonpath='{..namespace}')) "

set -g window-status-separator "  "
set -g window-status-format "#I:#W#F"
set -g window-status-current-format "#I:#W#F"
set -g automatic-rename-format "#{?#{==:#{pane_current_path},$HOME},~,#{b:pane_current_path}}"

set -g status-fg color7
set -g status-bg color18
set -g display-panes-color color7
set -g display-panes-active-color color5

set -g window-style                  bg=color0
set -g window-active-style           bg=terminal
set -g window-status-style           fg=color7,bg=color18
set -g window-status-current-style   fg=color4,bg=color18
set -g window-status-activity-style  reverse
set -g pane-border-style             fg=color17,bg=color17
set -g pane-active-border-style      fg=color17,bg=color17
set -g message-style                 bg=color18
set -g mode-style                    reverse
set -g copy-mode-match-style         reverse,fg=color4
set -g copy-mode-current-match-style reverse,fg=color5


# --------------------------------------
# plugins
# --------------------------------------

# resurrect
set -g @resurrect-dir "~/.local/share/tmux/resurrect"
set -g @resurrect-strategy-nvim "session"
set -g @resurrect-capture-pane-contents "off"

# continuum
set -g @continuum-restore "on"
set -g @continuum-boot "off"
set -g @continuum-save-interval "15"

# plugins should be sources at the end of tmux.conf
run-shell ~/.config/tmux/plugins/resurrect/resurrect.tmux
run-shell ~/.config/tmux/plugins/continuum/continuum.tmux
